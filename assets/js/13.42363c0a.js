(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{488:function(v,e,t){v.exports=t.p+"assets/img/0003.8828036f.png"},554:function(v,e,t){"use strict";t.r(e);var _=t(51),a=Object(_.a)({},(function(){var v=this,e=v.$createElement,_=v._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"算法-框架算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法-框架算法"}},[v._v("#")]),v._v(" 算法&框架算法")]),v._v(" "),_("h2",{attrs:{id:"前端为什么要学算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端为什么要学算法"}},[v._v("#")]),v._v(" 前端为什么要学算法？")]),v._v(" "),_("ol",[_("li",[v._v("算法是计算机世界的基本规则")]),v._v(" "),_("li",[v._v("构建你的思维模式")]),v._v(" "),_("li",[v._v("想理解框架源码的必备知识")]),v._v(" "),_("li",[v._v("vue和react的虚拟dom就是两棵树的diff")]),v._v(" "),_("li",[v._v("react16的fiber架构，就是把这棵树，改成了链表")]),v._v(" "),_("li",[v._v("jsx解析用的是栈")]),v._v(" "),_("li",[v._v("缓存模块用的是链表")]),v._v(" "),_("li",[v._v("vue3的虚拟dom diff,使用的是最长递增子序列")])]),v._v(" "),_("h2",{attrs:{id:"前端框架的算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前端框架的算法"}},[v._v("#")]),v._v(" 前端框架的算法")]),v._v(" "),_("ol",[_("li",[v._v("最基础的数据结构：数组和链表")]),v._v(" "),_("li",[v._v("前端最重要的：树")]),v._v(" "),_("li",[v._v("其他：栈，堆等等")]),v._v(" "),_("li",[v._v("算法思想"),_("br"),v._v("\na. 递归：自己玩自己"),_("br"),v._v("\nb. 回溯：有后悔药"),_("br"),v._v("\nc. 贪心：眼前利益，不能后悔"),_("br"),v._v("\nd. 动态规划：奇异博士的平行宇宙，找出最优解"),_("br"),v._v("\ne. 二分：分而治之"),_("br"),v._v("\nf. 其他：位运算，布降过滤器等等")])]),v._v(" "),_("h2",{attrs:{id:"训练"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#训练"}},[v._v("#")]),v._v(" 训练")]),v._v(" "),_("ol",[_("li",[v._v("leetcode20有效括号 (栈，jSx是否合法，也是类似的) 参考另一篇")]),v._v(" "),_("li",[v._v("leetcode46全排列 (回溯搜索)")]),v._v(" "),_("li",[v._v("leetcode104二叉树的深度（树）")]),v._v(" "),_("li",[v._v("leetcoee141环形链表 (链表基础)")]),v._v(" "),_("li",[v._v("leetcode206 翻转链表")])]),v._v(" "),_("h2",{attrs:{id:"vue3的diff-难点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#vue3的diff-难点"}},[v._v("#")]),v._v(" Vue3的diff(难点)")]),v._v(" "),_("ol",[_("li",[v._v("两个数组的diff（最少操作路径)")]),v._v(" "),_("li",[v._v("vue2的双端比较，vue3加入了最长递增子序列")]),v._v(" "),_("li",[v._v("找到最长的递增子序列，这些不变，其他的移动即可")]),v._v(" "),_("li",[v._v("动态规划&&贪心+二分，Vue选择了后者")]),v._v(" "),_("li",[v._v("leetcode:第300题")])]),v._v(" "),_("h2",{attrs:{id:"keep-alive等缓存场景-lru"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive等缓存场景-lru"}},[v._v("#")]),v._v(" Keep-alive等缓存场景 LRU")]),v._v(" "),_("p",[_("img",{attrs:{src:t(488),alt:""}})])])}),[],!1,null,null,null);e.default=a.exports}}]);