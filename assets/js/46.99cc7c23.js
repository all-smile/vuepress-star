(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{565:function(t,s,a){"use strict";a.r(s);var e=a(51),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gitattributes-文件作用详细讲解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitattributes-文件作用详细讲解"}},[t._v("#")]),t._v(" .gitattributes 文件作用详细讲解")]),t._v(" "),a("p",[t._v("官方文档： "),a("a",{attrs:{href:"https://git-scm.com/docs/gitattributes",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://git-scm.com/docs/gitattributes"),a("OutboundLink")],1),a("br"),t._v("\n参考文档： "),a("a",{attrs:{href:"https://blog.csdn.net/qq_35425070/article/details/106883833",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.csdn.net/qq_35425070/article/details/106883833"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"gitattributes介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitattributes介绍"}},[t._v("#")]),t._v(" .gitattributes介绍")]),t._v(" "),a("p",[t._v(".gitattributes 是一个文本文件，文件中的一行定义一个路径的若干个属性，主要用于定义每种文件的属性，以方便 git 帮我们统一管理。")]),t._v(" "),a("h2",{attrs:{id:"文件格式如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件格式如下"}},[t._v("#")]),t._v(" 文件格式如下")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("要匹配的文件模式 属性1 属性2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在.gitattributes文件的一行中，一个属性（以text属性为例）可能有4种状态：")]),t._v(" "),a("ol",[a("li",[t._v("text ：设置")]),t._v(" "),a("li",[t._v("-text ：不设置")]),t._v(" "),a("li",[t._v("text=string ：设置值")]),t._v(" "),a("li",[t._v("未声明，通常不出现该属性即可；但是为了覆盖其他文件中的声明，也可以!text")])]),t._v(" "),a("h2",{attrs:{id:"文件中可以定义的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件中可以定义的属性"}},[t._v("#")]),t._v(" 文件中可以定义的属性")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("text")])])]),t._v(" "),a("p",[t._v("用于控制行尾的规范性。如果一个文本文件是规范的，则Git库汇总该文件（git 服务器上的文件）的行尾总是LF。对于工作目录，除了text属性之外，还可以设置eol属性或core.eol配置变量。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("eol")])])]),t._v(" "),a("p",[t._v("设置行末字符。"),a("br"),t._v("\neol=lf ，[回车] ：入库时将行尾规范为LF，检出时行尾不强制转换为 CRLF"),a("br"),t._v("\neol=crlf，[换行、回车] ：入库时将行尾规范为LF，检出时将行尾转换为CRLF")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("Windows")])]),t._v(" "),a("th",[a("strong",[t._v("Linux/Mac")])]),t._v(" "),a("th",[a("strong",[t._v("Old Mac(pre-OSX)")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CRLF")]),t._v(" "),a("td",[t._v("LF")]),t._v(" "),a("td",[t._v("CR")])]),t._v(" "),a("tr",[a("td",[t._v("'\\n\\r'")]),t._v(" "),a("td",[t._v("'\\n'")]),t._v(" "),a("td",[t._v("'\\r'")])])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("diff")])])]),t._v(" "),a("p",[t._v("我们知道 git 主要是用来跟踪文件版本的，跟踪文件版本自然离不开比较差异，而diff 就是用来告诉 git 声明文件需要比较版本差异的。"),a("br"),t._v("\ndiff属性影响Git对特殊文件生成差异的方式。它可以告诉Git是否为路径生成文本补丁还是将路径视为二进制文件。它也可以影响在hunk头部显示的@@ -k,l +n,m @@，告诉Git使用外部命令来生成差异，或者是在生成差异之前让Git将二进制文件转换为文本文件。"),a("br"),t._v("\ndiff : 强制视为文本文件，即使它包含一些通常从不会出现在文本文件的字节值，例如NUL。"),a("br"),t._v("\n!diff : 表示为非文本文件，没有设置diff属性的路径会生成differ二进制文件（如果启用了二进制补丁，会生成二进制补丁）。"),a("br"),t._v("\n未定义 : 未指明diff属性的路径首先会检查其内容，如果它看起来像文本文件并且小于大文件阈值（core.bigFileThreshold），则将其视为文本文件，否则将生成differ二进制文件。")]),t._v(" "),a("blockquote",[a("p",[t._v("differ 规则"),a("br"),t._v("\ndiff 是使用指定的 diff 驱动程序显示的。每个驱动程序可以指定一个或多个选项。"),a("br"),t._v("\n如何自定义一个外部的diff驱动程序？"),a("br"),t._v("\ndiff驱动程序的定义是在gitconfig中完成的，并不是在gitattributes文件中，所以严格来说，这里并不适合谈论它。")])]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("*           "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 文件的行尾自动转换。如果是文本文件，则在文件入Git库时，行尾自动转换为LF。如果已经在入Git库中的文件的行尾是GRLF，则文件在入Git库时，不再转换为LF。")]),t._v("\n\n*.txt       text\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于.txt文件，标记为文本文件，并进行行尾规范化。")]),t._v("\n\n*.jpg       -text\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于`.jpg`文件，标记为非文本文件")]),t._v("\n\n*.vcproj    text "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("eol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("crlf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于.vcproj文件，标记为文本文件，在文件入Git库时进行规范化，行尾转换为LF。在检测到出工作目录时，行尾自动转换为GRLF。")]),t._v("\n\n*.sh        text "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("eol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于sh文件，标记为文本文件，在文件入Git库时进行规范化，即行尾为LF。在检出到工作目录时，行尾也不会转换为CRLF（即保持LF）。")]),t._v("\n\n*.py        "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("eol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对于py文件，只针对工作目录中的文件，行尾为LF。")]),t._v("\n\n*.bat       text "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("eol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("crlf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 无格式的文本文件,保证 Windows 的批处理文件在 checkout 至工作区时，始终被转换为 CRLF 风格的换行符；")]),t._v("\n\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br")])]),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("h3",{attrs:{id:"为新的git库设置统一的-gitattributes文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为新的git库设置统一的-gitattributes文件"}},[t._v("#")]),t._v(" 为新的Git库设置统一的.gitattributes文件：")]),t._v(" "),a("p",[t._v("在仓库的根目录下创建名为 .gitattributes 的文件。")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" .gitattributes\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" .gitattributes\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内容")]),t._v("\n* "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("auto "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("eol")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lf\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交到仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add: 新增.gitattributes配置"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"为已有git库设置统一的-gitattributes文件-重置-gitattributes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为已有git库设置统一的-gitattributes文件-重置-gitattributes"}},[t._v("#")]),t._v(" 为已有Git库设置统一的.gitattributes文件（重置 GitAttributes）：")]),t._v(" "),a("p",[t._v("在上一步的基础上（确保仓库根目录下已经存在.gitattributes文件）")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached -r\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("上面的命令就会根据文件 .gitattributes 中的定义，更新文件的结尾行。"),a("br"),t._v("\n任何变更都会自动使用指定文件的文件结尾行格式。"),a("br"),t._v("\n下一步，可以通知团队成员或者协作者去执行 Git 属性重置的命令即可。")]),t._v(" "),a("h3",{attrs:{id:"为所有git库设置统一的-gitattributes文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为所有git库设置统一的-gitattributes文件"}},[t._v("#")]),t._v(" 为所有Git库设置统一的.gitattributes文件：")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --get core.attributesFile\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --get core.attributesFile\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);